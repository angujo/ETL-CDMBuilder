<QueryDefinition>
  <Query>
    select a.patid,
    a.eventdate,
    a.staffid,
    a.value_as_string,
    a.value_as_number,
    a.value_as_date,
    a.unit_source_value,
    right(cast(a.patid as varchar),5) as care_site_id,
    a.constype,
    concat(a.patid,to_char(a.eventdate,'YYYYMMDD'),coalesce(a.constype, 99))::bigint as visit_occurrence_id,
    qualifier_source_value,
    case a.qualifier_source_value
    when 'Not applicable' then 45882470
    when 'Abnormal' then 45878745
    when 'Absent' then 45884086
    when 'High' then 45876384
    when 'Low' then 45881666
    when 'Negative' then 45878583
    when 'Normal' then 45884153
    when 'Positive' then 45884084
    when 'Present' then 45879438
    when 'Trace' then 45881796
    when 'Unknown' then 45877986
    when 'Very high' then 45879181
    when 'Very low' then 45879182
    end as qualifier_concept_id,
    data,
    concat(cast(enttype as varchar), '-', category, '-', description, '-', data)  as source_value
    from
    (
    select a.patid,
    c.eventdate,
    con.constype,
    c.consid,
    c.staffid,
    a.enttype,
    e.category,
    e.description,
    sm.scoringmethod as data,
    a.data1 as value_as_number,
    '' as value_as_string,
    case when e.data1_lkup = 'dd/mm/yyyy' then a.data1
    end as value_as_date,
    '' as unit_source_value,
    lu4.text as qualifier_source_value,
    '' as read_code_description,
    '' as gemscript_description,
    e.data_fields
    from {sc}._chunks ch
    JOIN {sc}.additional a ON a.patid = ch.PERSON_ID AND a.enttype in (372) --This enttype is for the results of scores and questionnaires
    join {sc}.entity e on a.enttype = e.enttype
    left join {sc}.clinical c on c.patid = a.patid and c.adid = a.adid
    left join {sc}.scoringmethod sm on a.data3 = sm.code::text
    left join {sc}.lookuptype lt4 on e.data4_lkup = lt4.name
    left join {sc}.lookup lu4 on lt4.lookup_type_id = lu4.lookup_type_id and lu4.code::text =  a.data4
    left join {sc}.consultation con on a.patid = con.patid and c.consid = con.consid
    where ch.ChunkId = {0}
    group by a.patid, c.eventdate, con.constype, c.consid, c.staffid, e.category, a.enttype, e.description, e.data_fields, sm.scoringmethod,
     a.data1, lu4.text, e.data4_lkup, a.data1, e.data1_lkup
    ) as a
    where a.eventdate is not NULL order by a.patid
  </Query>
  <Observation>
    <ObservationDefinition>
      <PersonId>patid</PersonId>
      <StartDate>eventdate</StartDate>
      <ProviderId>staffid</ProviderId>
      <VisitDetailId>visit_occurrence_id</VisitDetailId>
      <QualifierConceptId>qualifier_concept_id</QualifierConceptId>
      <QualifierSourceValue>qualifier_source_value</QualifierSourceValue>
      <ValuesAsString>
        <string>value_as_string</string>
      </ValuesAsString>
      <ValuesAsNumber>
           <string>value_as_number</string>
         </ValuesAsNumber>
      <AdditionalFields>
        <string>data</string>
        <string>constype</string>
      </AdditionalFields>
      <Concepts>
        <Concept>
          <ConceptIdMappers>
            <Mapper>
              <Lookup>Additional</Lookup>
            </Mapper>
          </ConceptIdMappers>
          <Fields>
            <Field key="source_value" defaultTypeId="38000280" isNullable="true"/>
          </Fields>
        </Concept>
        <Concept>
          <ConceptIdMappers>
            <Mapper>
              <Lookup>Units</Lookup>
            </Mapper>
          </ConceptIdMappers>
          <Fields>
            <Field key="unit_source_value" defaultTypeId="0" />
          </Fields>
        </Concept>
      </Concepts>
    </ObservationDefinition>
  </Observation>
</QueryDefinition>