<QueryDefinition>
  <Query>
	  with tests as (
	  select t.enttype, t.patid, t.eventdate, t.medcode, t.consid, t.staffid, t.data1, t.data2, t.data3, t.data4, t.data5, t.data6 from {sc}._chunks ch join {sc}.test t on t.eventdate is not null and ch.person_id = t.patid
	  where ch.ChunkId = {0}
	  ),

	  entities as (
	  select e.description, e.enttype, e.data_fields from {sc}.entity e 
	  where e.data_fields in (7,8, 4) and exists (select 1 from tests t where e.enttype = t.enttype)
	  ),

	  meds as (
	  select m.read_code, m.desc, m.medcode from {sc}.medical m 
	  where exists (select 1 from tests t where t.medcode = m.medcode)
	  ),

	  lookups as (
	  select l.lookup_type_id, l."text", l.code from {sc}.lookup l 
	  where l.lookup_type_id in (83, 85, 56) and exists (select 1 from tests t where l.code::text in (t.data1, t.data3, t.data4))
	  ),

	  consults as (
	  select c.constype, c.patid, c.consid from {sc}.consultation c 
	  where exists (select 1 from tests t where t.patid = c.patid and t.consid = c.consid)
	  ),

	  constypes(ctype, vdesc) as (
	  select ctype, case ctype::int
	  when 0 then 'Data Not Entered'
	  when 1 then 'Clinic'
	  when 2 then 'Night visit, Deputising service'
	  when 3 then 'Follow-up/routine visit'
	  when 4 then 'Night visit, Local rota'
	  when 5 then 'Mail from patient'
	  when 6 then 'Night visit , practice'
	  when 7 then 'Out of hours, Practice'
	  when 8 then 'Out of hours, Non Practice'
	  when 9 then 'Surgery consultation'
	  when 10 then 'Telephone call from a patient'
	  when 11 then 'Acute visit'
	  when 12 then 'Discharge details'
	  when 13 then 'Letter from Outpatients'
	  when 14 then 'Repeat Issue'
	  when 15 then 'Other'
	  when 16 then 'Results recording'
	  when 17 then 'Mail to patient'
	  when 18 then 'Emergency Consultation'
	  when 19 then 'Administration'
	  when 20 then 'Casualty Attendance'
	  when 21 then 'Telephone call to a patient'
	  when 22 then 'Third Party Consultation'
	  when 23 then 'Hospital Admission'
	  when 24 then 'Children''s Home Visit'
	  when 25 then 'Day Case Report'
	  when 26 then 'GOS18 Report'
	  when 27 then 'Home Visit'
	  when 28 then 'Hotel Visit'
	  when 29 then 'NHS Direct Report'
	  when 30 then 'Nursing Home Visit'
	  when 31 then 'Residential Home Visit'
	  when 32 then 'Twilight Visit'
	  when 33 then 'Triage'
	  when 34 then 'Walk-in Centre'
	  when 35 then 'Co-op Telephone advice'
	  when 36 then 'Co-op Surgery Consultation'
	  when 37 then 'Co-op Home Visit'
	  when 38 then 'Minor Injury Service'
	  when 39 then 'Medicine Management'
	  when 40 then 'Community Clinic'
	  when 41 then 'Community Nursing Note'
	  when 42 then 'Community Nursing Report'
	  when 43 then 'Data Transferred from other system'
	  when 44 then 'Health Authority Entry'
	  when 45 then 'Health Visitor Note'
	  when 46 then 'Health Visitor Report'
	  when 47 then 'Hospital Inpatient Report'
	  when 48 then 'Initial Post Discharge Review'
	  when 49 then 'Laboratory Request'
	  when 50 then 'Night Visit'
	  when 51 then 'Radiology Request'
	  when 52 then 'Radiology Result'
	  when 53 then 'Referral Letter'
	  when 54 then 'Social Services Report'
	  when 55 then 'Telephone Consultation'
	  when 56 then 'Template Entry'
	  when 57 then 'GP to GP communication transaction'
	  when 58 then 'Non-consultation medication data'
	  when 59 then 'Non-consultation data'
	  when 60 then 'ePharmacy message'
	  when 61 then 'Extended Hours' end vdesc from generate_series(0,61) as ctype
	  )

	  select a.patid,
	  a.eventdate,
	  a.staffid,
	  a.read_code,
	  a.value_as_number,
	  a.unit,
	  a.range_low,
	  a.range_high,
	  right(cast(a.patid as varchar),5) as care_site_id,
	  concat(a.patid,to_char(a.eventdate,'YYYYMMDD'))::numeric as visit_occurrence_id,
	  a.constype,
	  ct.vdesc as visit_description,
	  CASE a.operator
	  WHEN '=' THEN 4172703
	  WHEN '&gt;' THEN 4172704
	  WHEN '&lt;=' THEN 4171754
	  WHEN '&gt;=' THEN 4171755
	  WHEN '&lt;' THEN 4171756
	  WHEN '~' THEN 0
	  WHEN 'Data Not Entered' THEN 0
	  ELSE 0
	  END as operator_concept_id,
	  a.value_source_value,
	  read_code::varchar||'-'||entity_description as source_code,
	  medical_description
	  from
	  (
	  SELECT distinct
	  t.patid,
	  t.eventdate,
	  c.constype,
	  t.consid,
	  t.staffid,
	  m.read_code,
	  m.desc as medical_description,
	  e.description as entity_description,
	  e.enttype,
	  e.data_fields,
	  case when t.data1::bigint != 0 --In this case 0 means 'data not entered' so it is set to blank
	  then l.text else '' end as operator,
	  t.data2::numeric as value_as_number,
	  case when t.data3::bigint != 0 then l2.text
	  when e.enttype = 284 and (t.data2 is not null and t.data2::bigint !=0) then 'week' --Enttype (code) 284 refers to gestational age in weeks so the unit is hard coded
	  else '' end as unit, --Data3 is the coded unit of the laboratory test. The join on line 32 looks up the text value and stores that here.
	  case when t.data4::bigint != 0 then l3.text else '' end as value_source_value, --In this case 0 means 'data not entered' so it is set to blank. Data4 is the coded qualifier (high,low). The join on line 35 looks up the text value and stores that value here.
	  t.data5::numeric as range_low,
	  t.data6::numeric as range_high
	  FROM tests t
	  JOIN entities  e ON t.enttype = e.enttype AND e.data_fields in (7,8) --When data_fields equals 7 or 8 then both operators and units may be present.
	  JOIN meds m ON t.medcode = m.medcode
	  left JOIN lookups l ON t.data1 = l.code::text AND l.lookup_type_id = 56 /*OPR - Operator*/
	  left JOIN lookups l2 ON t.data3 = l2.code::text AND l2.lookup_type_id = 83 /*SUM - Specimen Unit of Measure*/
	  left JOIN lookups l3 ON t.data4 = l3.code::text AND l3.lookup_type_id = 85 /*TQU - Test Qualifier*/
	  left join consults c on t.patid = c.patid and t.consid = c.consid

	  UNION

	  SELECT  distinct
	  t.patid,
	  t.eventdate,
	  c.constype,
	  t.consid,
	  t.staffid,
	  m.read_code,
	  m.desc as medical_description,
	  e.description as entity_description,
	  e.enttype,
	  e.data_fields,
	  '' as operator,
	  cast(NULL as int) as value_as_number,
	  '' as unit,
	  case when t.data1::bigint != 0 then l.text else '' end as value_source_value, --In this case 0 means 'data not entered' so it is set to blank. Data1 is the coded value for the qualifier (high,low) so the join on line 64 looks up the value and stores the text here.
	  t.data2::numeric as range_low,
	  t.data3::numeric as range_high
	  FROM tests t
	  JOIN entities e ON t.enttype = e.enttype AND e.data_fields = 4 --When data_fields equals 4 then only the value of the text and qualifier is available.
	  JOIN meds m ON t.medcode = m.medcode
	  left JOIN lookups l ON t.data1 = l.code::text AND l.lookup_type_id = 85 /*TQU - Test Qualifier*/
	  left join consults c on t.patid = c.patid and t.consid = c.consid
	  ) as a
	  left join constypes ct on ct.ctype = a.constype
	  order by a.patid
  </Query>
  <Measurement>
    <MeasurementDefinition>
      <PersonId>patid</PersonId>
      <VisitDetailId>visit_occurrence_id</VisitDetailId>
      <StartDate>eventdate</StartDate>
      <ProviderId>staffid</ProviderId>
      <ValueSourceValue>value_source_value</ValueSourceValue>
      <ValueAsNumber>value_as_number</ValueAsNumber>
      <RangeLow>range_low</RangeLow>
      <RangeHigh>range_high</RangeHigh>
      <OperatorConceptId>operator_concept_id</OperatorConceptId>
      <Concepts>
        <Concept>
          <ConceptIdMappers>
            <Mapper>
              <Lookup>Test_Ent</Lookup>
            </Mapper>
          </ConceptIdMappers>
          <Fields>
            <Field key="source_code" defaultTypeId="44818702" sourceKey="read_code"/> 
          </Fields>
        </Concept>
        <Concept>
          <ConceptIdMappers>
            <Mapper>
              <Lookup>Units</Lookup>
            </Mapper>
          </ConceptIdMappers>
          <Fields>
            <Field key="unit" defaultTypeId="0" />
          </Fields>
        </Concept>
        <Concept>
          <ConceptIdMappers>
            <Mapper>
              <Lookup>ValueAsConceptId</Lookup>
            </Mapper>
          </ConceptIdMappers>
          <Fields>
            <Field key="value_source_value" defaultTypeId="0" />
          </Fields>
        </Concept>
      </Concepts>
    </MeasurementDefinition>
  </Measurement>
  <VisitOccurrence>
    <VisitOccurrenceDefinition>
      <Id>visit_occurrence_id</Id>
      <PersonId>patid</PersonId>
      <StartDate>eventdate</StartDate>
      <EndDate>eventdate</EndDate>
      <CareSiteId>care_site_id</CareSiteId>
      <ProviderId>staffid</ProviderId>
      <AdditionalFields>
        <string>constype</string>
      </AdditionalFields>
      <Concepts>
        <Concept>
          <Fields>
            <Field defaultConceptId="9202" sourceKey="visit_description" defaultTypeId="44818518"/>
          </Fields>
        </Concept>
      </Concepts>
    </VisitOccurrenceDefinition>
  </VisitOccurrence>
</QueryDefinition>